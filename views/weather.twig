{% import "utils.html" as utils %}
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Simple Weather App</title>
    <link rel="icon" type="image/png" href="/img/sun-in-my-heart.png">
    <link rel="stylesheet" href="/css/built.min.css">
    <script src="/js/built.min.js"></script>
  </head>
  <body>

    <nav class="navbar navbar-default">
      <div class="container-fluid">
        <div class="navbar-header">
          <a class="navbar-brand" href="/">
            <img alt="Simple Weather App" style="max-height: 2ex;" src="/img/sun-in-my-heart.png">
          </a>
        </div>
        <form class="navbar-form navbar-left" role="search" method="GET" action="/" id="place-form">
          <div class="form-group dropdown">
            <input type="text" class="form-control" id="search-inpt" placeholder="Search" autocomplete="off">
            <input type="hidden" name="place-id" id="place-id">
          </div>
          <button type="button" class="btn btn-default" id="search-btn">Search</button>
        </form>
      </div>
    </nav>

    {% if forecasts != false %}
      <div class="container">
        <div class="row">
          <div class="col-lg-12 col-md-12 col-sm12 col-xs-12"><!-- container of panel -->

        <div class="panel panel-primary">
          <div class="panel-heading">
            <h3 class="panel-title">{{ forecasts.city.name }} ({{ forecasts.city.country }})
              <span>lat: {{ forecasts.city.lat }}, lon:  {{ forecasts.city.lon }}</span></h3>
          </div>
          <div class="panel-body">
            <div class="row">
              <div id="now-col">
                <h4>Now</h4>
                  {{ utils.geticon(current.weather.id, current.weather.icon, current.weather.description) }}
                  <br><br>
                  <h5>{{ current.temperature|raw }}</h5>
                  <p>{% if current.precipitation.getValue() > 0 %}{{ current.precipitation.getDescription()|title }}: {{current.precipitation.getValue()}}mm<br/>{%endif%}
                {{ current.clouds.getDescription() }}</p>
              </div>
              <div class="col-xs-3"">
                <span title="{{ current.wind.direction.getDescription() }}">{{ current.wind.speed }} {{current.wind.direction.unit }}</span><br/>
                Pression: {{ current.pressure }}<br/>
                Humidity: {{ current.humidity }}<br/>
                <br/>
                <br/>
                <p>Sun rise: {{ current.sun.rise|date('H:i') }} -- sun set: {{ current.sun.set|date('H:i') }}</p>
              </div>
              <div class="col-xs-5">
                <div class="ct-chart ct-golden-section"></div>
                <script>
                 var data = {
                   series: [
                     {
                       name: 'forecasts',
                       data: []
                     }
                   ],
                 };
                 var op = {
                   showPoint: true ,
                     axisX: {
                       type: Chartist.FixedScaleAxis,
                       divisor: 5,
                       labelInterpolationFnc: function(value) {
                         return mpm.simpleformat(value, 'day');
                       }
                     }
                  } ;
                 var positions = [];
                 var classes = [];
                 var times = {};
                 {% set previous_day = 0 %}
                 {% for forecast in forecasts %}
                 {% set daytime = forecast.time.from.format('Y-m-d H:i') %}
                 {% set day = forecast.time.from.format('Y-m-d') %}
                 {% if  previous_day != day %}
                 times = SunCalc.getTimes(new Date('{{day}}'), {{ forecasts.city.lat }}, {{ forecasts.city.lon }});
                 positions.push(new Date(times.sunrise));
                 positions.push(new Date(times.sunset));
                 classes.push('sunrise');
                 classes.push('sunset');
                 {% set  previous_day = day %}
                 {% endif %}
                   data.series[0].data.push( { x: new Date('{{daytime}}'), y: {{ forecast.temperature.getValue() }} } );
                 {% endfor %}
                 op.plugins = [
                   Chartist.plugins.verticalMomentLines({
                     positions: positions,
                     classes: classes,
                   })
                 ];
                 new Chartist.Line('.ct-chart', data, op);
                </script>
              </div>
            </div><!-- row -->
          </div> <!-- panel body -->
          <div class="panel-footer">Last Update: {{ forecasts.lastUpdate|date('Y-m-d H:i')}}</div>
        </div><!--  panel -->
          </div>

        {% set previous_day = '' %}
        {% for forecast in forecasts %}
          {% set day = forecast.time.from.format('Y-m-d') %}
          {%  if day != previous_day %}
            {%  if '' != previous_day %}

            </div><!-- row -->
          </div> <!-- panel body -->
        </div><!--  panel -->
      </div><!-- container of panel -->
            {% endif %}
       <div class="col-lg-6 col-md-6 col-sm6 col-xs-12"><!-- container of panel -->
        <div class="panel panel-info">
          <div class="panel-heading">
            <h3 class="panel-title">{{ utils.showday(day) }}</h3>
          </div>
          <div class="panel-body">
            <div class="row">
          {% endif %}
            <div class=" col-lg-6  col-md-6 col-sm-6 col-xs-6">
              <div class="panel panel-default">
                <div class="panel-heading">
                  <h4 class="panel-title">{{ utils.showfromtime(forecast.time) }}</h4>
                </div>
                <div class="row">
                  <div class="panel-body">
                    <div class="col-xs-4">
                      {{ utils.geticon(forecast.weather.id, forecast.weather.icon, forecast.weather.description) }}
                    </div>
                    <div class="col-xs-8">
                      {{ utils.showforecasttext(forecast) }}
                    </div>
                  </div>
                </div>
              </div>
            </div>
        {% set previous_day = day %}
        {% endfor %}

            </div><!-- row -->
          </div> <!-- panel body -->
        </div><!--  panel -->


      </div><!-- row -->
    </div><!-- container -->
    {% endif %}

  </body>
</html>
